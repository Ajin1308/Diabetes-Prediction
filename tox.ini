# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[tox]
envlist = python3.9,python3.10, python3.11


[testenv]
deps = -rrequirements_dev.txt
commands = 
    # stop the build if there are Python syntax errors or undefined names
    flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # type linting
    mypy src/
    # pytest unit
    pytest -v tests/unit
    # pytest integration
    pytest -v tests/integration

; [testenv]
; basepython = python
; install_command = pip install {opts} {packages}
; allowlist_externals = train

; setenv =
; 	PYTHONPATH=.
; 	PYTHONHASHSEED=0


; [testenv:test_package]
; envdir = {toxworkdir}/test_package
; deps =
; 	-r{toxinidir}/requirements_dev.txt
; commands=
; 	python src/components/train_pipeline.py
; 	pytest \
; 	-s \
; 	-vv \
; 	{posargs:tests/}


; [testenv:train]
; envdir = {toxworkdir}/test_package
; deps =
;      {[testenv:test_package]deps}
; commands=
; 	python src/components/train_pipeline.py